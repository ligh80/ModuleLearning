apt install git     //安装git

ssh-keygen -t rsa -C “xxxxxxxxxx@163.com”   //因为git和 GitHub之间是通过ssh加密传输的，因此需要配置公钥，需要先生成公私密钥。
cat /root/.ssh/id_rsa.pub //复制生产的密钥到github仓库SSH的key库中
ssh -T git@github.com   //查看能否通信成功

git config --global user.name "<用户名>"    //设置用户名
git config --global user.email "<电子邮件>" //设置电子邮箱
git config --list   //查看是否设置成功

git init    //本地本地仓库

从远程仓库同步仓库到本地
情况一 拉取没有权限仓库的代码项目，只用clone,走的是https方式
git clone https://github.com/ligh80/makefiletest.git //例如这样，后面是这个仓库的http的链接

情况二 拉取有修改权限仓库的代码项目，可以用pull(fetch+merge)和push
git clone https://github.com/ligh80/makefiletest.git    //如果本地是空仓库，推荐用clone，将github的仓库直接拉下来，之后再用pull和push
git remote add origin “git@github.com:ligh80/makefiletest.git”    //origin 远程版本库的代称，一般默认是origin， 可以改
git remote -v   //查看远程库信息，一个远程库对应两条信息，（fatch）信息和（push）信息
git fetch --all   //根据已连接的远程仓库，将远程主机的最新内容拉到本地
git reset --hard origin/master   //强制更新覆盖本地

git pull origin master  //相当于git fetch 和 git merge，并不会把所有文件更新（本地已经修改的文件不会更新），只会更新服务器上修改过的其他文件


从本地仓库同步到远程仓库
git remote add origin “git@github.com:ligh80/makefiletest.git”    //origin 远程版本库的代称，一般默认是origin， 可以改
git remote -v   //查看远程库信息，一个远程库对应两条信息，（fatch）信息和（push）信息

git add .   //添加当前目录下的所有文件到暂存区，可以是添加一个或多个文件到暂存区:git add [file1] [file2] ...
git status  //命令用于查看项目的当前状态 文件名前A代表新增，AM代表新增后有修改
git commit -m '提交日志'    //进行提交，提交的时候应该注明提交日志, 描述改动的详细内容，现在临时区域里的文件合并到了本地仓库，可以不要-m参数
git push    //把本地仓库提交到远端

git reset HEAD  //撤删add的所有文件
git reset HEAD src/mode/hello.java  //对某一个文件进行撤删

回滚代码
如果需要删除的 commit 是最新的，那么可以通过 git reset 命令将代码回滚到之前某次提交的状态，但一定要将现有的代码做好备份，否则回滚之后这些变动都会消失。具体操作如下：
git log // 查询要回滚的 commit_id
git reset --hard [commit_id] // HEAD 就会指向此次的提交记录